name: Flutter CI  
  
on:  
  push:  
    tags:  
      - 'v*' # Trigger on version tags like v1.0.0  
  
jobs:  
  build_android:  
    name: Build Android  
    runs-on: ubuntu-latest  
    steps:  
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Flutter 
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.2'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
  
      - name: Get packages
        run: flutter pub get
  
      - name: Run tests
        run: flutter test    

      - name: Build APK and AAB  
        run: |  
          flutter clean  
          flutter build apk
          flutter build appbundle

       # 提取版本号
      - name: Extract version from tag  
        run: |  
          VERSION=${GITHUB_REF#refs/tags/}  
          echo "VERSION=$VERSION" >> $GITHUB_ENV      

      # 检查是否存在指定的 GitHub Release
      - name: Get existing release
        id: get_release
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await github.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: ${{ env.VERSION }} // 根据你的需要设置标签名称
            });
            core.setOutput('release_exists', response.status == 200);
            if (response.status == 200) {
              core.setOutput('upload_url', response.data.upload_url);
            }


       # 如果不存在，则创建新的 GitHub Release
      - name: Create new release
        if: steps.get_release.outputs.release_exists != 'true'
        uses: actions/create-release@v1
        id: create_release
        with:  
          tag_name: ${{ env.VERSION }}  
          release_name: Release ${{ env.VERSION }}  
          draft: false  
          prerelease: false    

      - name: Upload Android APK to Release  
        id: upload-apk-release-asset  
        uses: actions/upload-release-asset@v1
        env:  
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        with:  
          upload_url: ${{ steps.get_release.outputs.upload_url || steps.create_release.outputs.upload_url }}  
          asset_path: ./build/app/outputs/apk/app-release.apk    
          asset_name: app-release.apk  
          asset_content_type: application/vnd.android.package-archive  
    
      - name: Upload Android App Bundle (AAB) to Release  
        id: upload-aab-release-asset  
        uses: actions/upload-release-asset@v1  
        env:  
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        with:  
          upload_url: ${{ steps.create_release.outputs.upload_url }}  
          asset_path: ./build/app/outputs/bundle/release/app-release.aab  
          asset_name: app-release.aab  
          asset_content_type: application/octet-stream  
   
  build_ios:  
    name: Build iOS  
    runs-on: macos-latest  
    steps:  
      - name: Checkout Code
        uses: actions/checkout@v2  

      - name: Set up Flutter 
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.2'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
  
      - name: Get packages
        run: flutter pub get
  
      - name: Run tests
        run: flutter test    

      - name: Build iOS app  
        run: |  
          flutter clean  
          flutter build ios --release --no-codesign 

      - name: Create IOS Release Artifacts  
        run: |  
          mkdir artifacts  
          cp -r build/ios/iphoneos/Runner.app artifacts/Runner.app  
          zip -r artifacts/Runner.ipa artifacts/Runner.app  
 

       # 提取版本号
      - name: Extract version from tag  
        run: |  
          VERSION=${GITHUB_REF#refs/tags/}  
          echo "VERSION=$VERSION" >> $GITHUB_ENV 

      # 检查是否存在指定的 GitHub Release
      - name: Get existing release
        id: get_release
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await github.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: ${{ env.VERSION }} // 根据你的需要设置标签名称
            });
            core.setOutput('release_exists', response.status == 200);
            if (response.status == 200) {
              core.setOutput('upload_url', response.data.upload_url);
            }


       # 如果不存在，则创建新的 GitHub Release
      - name: Create new release
        if: steps.get_release.outputs.release_exists != 'true'
        uses: actions/create-release@v1
        id: create_release
        with:  
          tag_name: ${{ env.VERSION }}  
          release_name: Release ${{ env.VERSION }}  
          draft: false  
          prerelease: false    

      - name: Upload iOS IPA to Release  
        id: upload-ipa-release-asset  
        uses: actions/upload-release-asset@v1  
        env:  
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        with:  
          upload_url: ${{ steps.get_release.outputs.upload_url || steps.create_release.outputs.upload_url }}  
          asset_path: ./artifacts/Runner.ipa  
          asset_name: Runner.ipa  
          asset_content_type: application/zip    
            
    